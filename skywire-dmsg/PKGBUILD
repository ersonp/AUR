 # Maintainer: Moses Narrow <moe_narrow@use.startmail.com>
# Maintainer: Rudi [KittyCash] <rudi@skycoinmail.com>
pkgname=skywire-dmsg
_pkgname=dmsg
_githuborg=skycoin
pkgdesc="Skywire Mainnet Node implementation. Skycoin.com"
_pkggopath="github.com/${_githuborg}/${_pkgname}"
pkgver='autogenerated'
#pkgver='autogenerated'
pkgrel=3
#pkgrel=3
arch=( 'i686' 'x86_64' 'aarch64' 'armv8' 'armv7' 'armv7l' 'armv7h' 'armv6h' 'armhf' 'armel' 'arm' )
url="https://${_pkggopath}"
license=()
makedepends=('git' 'go' 'musl' 'kernel-headers-musl') #disable signature check pending fixes#  'skycoin-keyring')
#uncomment the next line and comment the one after for testing your branch
#source=("git+https://github.com/FrappeFortyTwo/dmsg.git#branch=${BRANCH:-enhancement/improve-dmsgpty}")
source=("git+${url}.git") ##branch=${BRANCH:-develop}"
sha256sums=('SKIP')

pkgver() {
cd "${srcdir}/${_pkgname}"
local _version=$(git describe --abbrev=0 | tr --delete v)
local _version=${_version//-/_}
local _date=$(git log -1 --format="%cd" --date=short | sed s/-//g)
local _count=$(git rev-list --count HEAD)
local _commit=$(git rev-parse --short HEAD)
echo "${_version}_${_date}.${_count}_${_commit}_${BRANCH:-develop}"
}

prepare() {
# https://wiki.archlinux.org/index.php/Go_package_guidelines
mkdir -p ${srcdir}/go/src/github.com/${_githuborg}/ ${srcdir}/go/bin ${srcdir}/go/apps
ln -rTsf ${srcdir}/${_pkgname} ${srcdir}/go/src/${_pkggopath}
cd ${srcdir}/go/src/${_pkggopath}/
}

build() {
export GOPATH=${srcdir}/go
export GOBIN=${GOPATH}/bin
export _GOAPPS=${GOPATH}/apps
export GOOS=linux
export CGO_ENABLED=1
#use musl-gcc for static compilation
export CC=musl-gcc

#create the skywire binaries
cd ${srcdir}/go/src/${_pkggopath}
_cmddir=${srcdir}/go/src/${_pkggopath}/cmd

_buildbins dmsg-discovery $GOBIN
_buildbins dmsg-server $GOBIN
_buildbins dmsgget $GOBIN
_buildbins dmsgpty-cli $GOBIN
_buildbins dmsgpty-host $GOBIN
_buildbins dmsgpty-ui $GOBIN
}

#I had to speed up the build for testing but there's a risk of using old binaries.
#will change this when the commit for the build tracks a branch
_buildbins() {
_GOHERE=$2
_binpath=$3
_binname=$1
_msg2 "building ${_binname} binary"
#if [[ ! -f ${_GOHERE}/${_binname} ]] ; then
	cd ${_cmddir}/${_binpath}${_binname}
  go build -trimpath --ldflags '-s -w -linkmode external -extldflags "-static" -buildid=' -o $_GOHERE/ .
#fi
}


package() {
_msg2 'installing binaries'
mkdir -p ${pkgdir}/opt/skywire/bin/
mkdir -p ${pkgdir}/usr/bin/
install -Dm755  ${srcdir}/go/bin/dmsg-discovery ${pkgdir}/opt/skywire/bin/
install -Dm755  ${srcdir}/go/bin/dmsg-server ${pkgdir}/opt/skywire/bin/
install -Dm755  ${srcdir}/go/bin/dmsgget ${pkgdir}/opt/skywire/bin/
install -Dm755  ${srcdir}/go/bin/dmsgpty-cli ${pkgdir}/opt/skywire/bin/
install -Dm755  ${srcdir}/go/bin/dmsgpty-host ${pkgdir}/opt/skywire/bin/
install -Dm755  ${srcdir}/go/bin/dmsgpty-ui ${pkgdir}/opt/skywire/bin/
ln -rTsf ${pkgdir}/opt/skywire/bin/dmsg-discovery ${pkgdir}/usr/bin/dmsg-discovery
ln -rTsf ${pkgdir}/opt/skywire/bin/dmsg-server ${pkgdir}/usr/bin/dmsg-server
ln -rTsf ${pkgdir}/opt/skywire/bin/dmsgget ${pkgdir}/usr/bin/dmsgget
ln -rTsf ${pkgdir}/opt/skywire/bin/dmsgpty-cli ${pkgdir}/usr/bin/dmsgpty-cli
ln -rTsf ${pkgdir}/opt/skywire/bin/dmsgpty-host ${pkgdir}/usr/bin/dmsgpty-host
ln -rTsf ${pkgdir}/opt/skywire/bin/dmsgpty-ui ${pkgdir}/usr/bin/dmsgpty-ui

}


_msg2() {
(( QUIET )) && return
local mesg=$1; shift
printf "${BLUE}  ->${ALL_OFF}${BOLD} ${mesg}${ALL_OFF}\n" "$@"
}
